module pipeid (mwreg,mrn,ern,ewreg,em2reg,mm2reg,dpc4,inst,wrn,wdi,ealu,malu,mmo,wwreg,clk,clrn,bpc,jpc,pcsource,nostall,wreg,m2reg,wmem,aluc,aluimm,a,b,imm,rn,shift,jal);
	input [31:0] dpc4,inst,wdi,ealu,malu,mmo;
	input [4:0] ern,mrn,wrn;
	input mwreg,ewreg,em2reg,mm2reg,wwreg;
	input clk,clrn;
	output [31:0] bpc,jpc,a,b,imm;
	output [4:0] rn;
	output [3:0] aluc;
	output [1:0] pcsource;
	output nostall,wreg,m2reg,wmem,aluimm,shift,jal;
	wire [5:0] op,func;
	wire [4:0] rs,rt,rd;
	wire [31:0] qa,qb,br_offset;
	wire [15:0] ext16;
	wire [1:0] fwda,fwdb;
	wire regrt,sext,rsrtequ,e;
	assign func = inst[5:0];
	assign op = inst[31:26];
	assign rs = inst[25:21];
	assign rt = inst[20:16];
	assign rd = inst[15:11];
	assign jpc = {dpc4[31:28],inst[25:0],2'b00};
	pipeidcu cu (.mwreg(mwreg),.mrn(mrn),.ern(ern),.ewreg(ewreg),.em2reg(em2reg),.mm2reg(mm2reg),.rsrtequ(rsrtequ),.func(func),.op(op),.rs(rs),.rt(rt),.wreg(wreg),.m2reg(m2reg),.wmem(wmem),.aluc(aluc),.regrt(regrt),.aluimm(aluimm),.fwda(fwda),.fwdb(fwdb),.nostall(nostall),.sext(sext),.pcsource(pcsource),.shift(shift),.jal(jal));
	regfile rf (.rna(rs),.rnb(rt),.d(wdi),.wn(wrn),.we(wwreg),.clk(~clk),.clrn(clrn),.qa(qa),.qb(qb));
	mux2x5 des_reg_no (.a0(rd),.a1(rt),.s(regrt),.y(rn));
	mux4x32 alu_a (.a0(qa),.a1(ealu),.a2(malu),.a3(mmo),.s(fwda),.y(a));
	mux4x32 alu_b (.a0(qb),.a1(ealu),.a2(malu),.a3(mmo),.s(fwdb),.y(b));
	assign rsrtequ = ~| (a^b);
	assign e = sext & inst [15];
	assign ext16 = {16{e}};
	assign imm = {ext16,inst[15:0]};
	assign br_offset = {imm[29:0],2'b00};
	cla32 br_addr (.a(dpc4),.b(br_offset),.ci(1'b0),.s(bpc));
endmodule